<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.yh.dao.WithdrawDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.yh.entity.WithdrawEntity" id="withdrawMap">
        <result property="id" column="id"/>
        <result property="applyUserId" column="apply_user_id"/>
        <result property="withdrawalamount" column="withdrawalAmount"/>
        <result property="applyTime" column="apply_time"/>
        <result property="withdrawStatus" column="withdraw_status"/>
        <result property="operateTime" column="operate_time"/>
        <result property="userId" column="user_id"/>
    </resultMap>

	<select id="queryObject" resultType="io.renren.modules.yh.entity.WithdrawEntity">
		select * from sys_withdraw where id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.modules.yh.entity.WithdrawEntity">
		select * from sys_withdraw
		<where>
		    <if test = "applyUserId !=null">
		        apply_user_id = #{applyUserId}
		    </if>
		    
		     <if test = "userId !=null">
		        user_id = #{userId}
		    </if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sys_withdraw 
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.yh.entity.WithdrawEntity" useGeneratedKeys="true" keyProperty="id">
		insert into sys_withdraw
		(
			`apply_user_id`, 
			`withdrawalAmount`, 
			`apply_time`, 
			`withdraw_status`, 
			`operate_time`, 
			`user_id`
		)
		values
		(
			#{applyUserId}, 
			#{withdrawalamount}, 
			#{applyTime}, 
			#{withdrawStatus}, 
			#{operateTime}, 
			#{userId}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.yh.entity.WithdrawEntity">
		update sys_withdraw 
		<set>
			<if test="applyUserId != null">`apply_user_id` = #{applyUserId}, </if>
			<if test="withdrawalamount != null">`withdrawalAmount` = #{withdrawalamount}, </if>
			<if test="applyTime != null">`apply_time` = #{applyTime}, </if>
			<if test="withdrawStatus != null">`withdraw_status` = #{withdrawStatus}, </if>
			<if test="operateTime != null">`operate_time` = #{operateTime}, </if>
			<if test="userId != null">`user_id` = #{userId}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from sys_withdraw where id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sys_withdraw where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
	
	<update id="operate" parameterType="java.util.Map">
		update sys_withdraw set `operate_time` = #{operateTime},`withdraw_status` = #{withdrawStatus}, `user_id` = #{userId} where id = #{id}
	</update>
	
	<select id="getSumApplyCash" resultType="java.math.BigDecimal">
		select sum(withdrawalAmount) from  sys_withdraw where apply_user_id =#{userId} and withdraw_status!=3
	</select>
	
	

</mapper>