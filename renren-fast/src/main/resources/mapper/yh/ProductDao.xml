<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.yh.dao.ProductDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.yh.entity.ProductEntity" id="productMap">
        <result property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="productPictureUrl" column="product_picture_url"/>
        <result property="productDetail" column="product_detail"/>
        <result property="productType" column="product_type"/>
        <result property="productTypeName" column="product_type_name"/>
        <result property="productVideoUrl" column="product_video_url"/>
        <result property="productNum" column="product_num"/>
        <result property="productTradePrice" column="product_trade_price"/>
        <result property="productRetailPrice" column="product_retail_price"/>
        <result property="enterpriseId" column="enterprise_id"/>
        <result property="enterpriseName" column="enterprise_name"/>
        <result property="isHot" column="is_hot"/>
        <result property="enterType" column="enter_type"/>
        <result property="enterName" column="enter_name"/>
        <result property="enterPersonId" column="enter_person_id"/>
         
    </resultMap>
    
    <resultMap type="io.renren.modules.api.entity.dto.CollectionDTO" id="apiProductMap">
        <result property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="productDetail" column="product_detail"/>
        <result property="productPictureUrl" column="product_picture_url"/>
        <result property="productType" column="product_type"/>
    </resultMap>
    
     <resultMap type="io.renren.modules.api.entity.dto.ShoppingCartDTO" id="apiShoppingCartMap">
        <result property="catalog" column="type"/>
        <result property="categoryId" column="id"/>
        <result property="categoryImageUrl" column="image_url"/>
        
        <collection property="data" ofType="io.renren.modules.api.entity.dto.ShoppingCartDetailDTO">
         	<id property="productId" column="product_id"/>
	        <result property="productName" column="product_name"/>
	        
	        <!-- 价钱是哪个  product_trade_price -->
	        <result property="productRetailPrice" column="product_retail_price"/>
	        
	        
	        <result property="productPictureUrl" column="product_picture_url"/>
	        <result property="productVideoUrl" column="product_video_url"/>
	        <result property="productNum" column="product_num"/>
	        
	        <!-- 是否收藏 咋这么扯淡 -->
	        <result property="isCollected" column="isCollected"/>
	                
	        <result property="productDetail" column="product_detail"/>
        </collection>
      
           
    </resultMap>

	<select id="queryObject" resultType="io.renren.modules.yh.entity.ProductEntity">
		select * from sys_product where product_id = #{value}
	</select>

	<select id="queryList" resultType="io.renren.modules.yh.entity.ProductEntity">
		select * from sys_product
		<where>
			<if test="currentUserId !=null">
				enter_person_id = #{currentUserId}
			</if>
		</where>
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
			<otherwise>
                order by product_id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from sys_product 
		<where>
			<if test="currentUserId !=null">
				enter_person_id = #{currentUserId}
			</if>
		</where>
	</select>
	 
	<insert id="save" parameterType="io.renren.modules.yh.entity.ProductEntity" useGeneratedKeys="true" keyProperty="productId">
		insert into sys_product
		(
			`product_name`, 
			`product_picture_url`, 
			`product_detail`, 
			`product_type`, 
			`product_type_name`, 
			`product_video_url`, 
			`product_num`, 
			`product_trade_price`, 
			`product_retail_price`, 
			`enterprise_id`, 
			`is_hot`, 
			`enter_type`,
			enterprise_name,
			enter_name,
			enter_person_id
		)
		values
		(
			#{productName}, 
			#{productPictureUrl}, 
			#{productDetail}, 
			#{productType}, 
			#{productTypeName}, 
			#{productVideoUrl}, 
			#{productNum}, 
			#{productTradePrice}, 
			#{productRetailPrice}, 
			#{enterpriseId}, 
			#{isHot}, 
			#{enterType},
			#{enterpriseName},
			#{enterName},
			#{enterPersonId}
			
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.yh.entity.ProductEntity">
		update sys_product 
		<set>
			<if test="productName != null">`product_name` = #{productName}, </if>
			<if test="productPictureUrl != null">`product_picture_url` = #{productPictureUrl}, </if>
			<if test="productDetail != null">`product_detail` = #{productDetail}, </if>
			<if test="productType != null">`product_type` = #{productType}, </if>
			<if test="productTypeName != null">`product_type_name` = #{productTypeName}, </if>
			<if test="productVideoUrl != null">`product_video_url` = #{productVideoUrl}, </if>
			<if test="productNum != null">`product_num` = #{productNum}, </if>
			<if test="productTradePrice != null">`product_trade_price` = #{productTradePrice}, </if>
			<if test="productRetailPrice != null">`product_retail_price` = #{productRetailPrice}, </if>
			<if test="enterpriseId != null">`enterprise_id` = #{enterpriseId}, </if>
			<if test="isHot != null">`is_hot` = #{isHot}, </if>
			<if test="enterType != null">`enter_type` = #{enterType},</if>
			<if test="enterpriseName != null">`enterprise_name` = #{enterpriseName},</if>
			<if test="enterName != null">`enter_name` = #{enterName},</if>
			<if test="enterPersonId != null">`enter_person_id` = #{enterPersonId}</if>
		</set>
		where product_id = #{productId}
	</update>
	
	<delete id="delete">
		delete from sys_product where product_id = #{value}
	</delete>
	
	<delete id="deleteBatch">
		delete from sys_product where product_id in 
		<foreach item="productId" collection="array" open="(" separator="," close=")">
			#{productId}
		</foreach>
	</delete>
	
    <delete id="deleteBatchByType">
		delete from sys_product where product_type in 
		<foreach item="ids" collection="array" open="(" separator="," close=")">
			#{ids}
		</foreach>
	</delete>
	
	<select id="apiHotSaleProduction" resultMap="apiProductMap">
		select a.product_id,a.product_name,a.product_detail,a.product_picture_url,a.product_type 
		from sys_product a,sys_enterpriseinfo b
		 where a.enterprise_id = b.enterprise_id 
		  and b.enterprise_area_id = #{areaID} 
		  and a.is_hot = 0  <!-- 0热销，1不热销 -->
	</select>
	
	<select id="apiSearchProduction" resultMap="apiProductMap">
		select a.product_id,a.product_name,a.product_detail,a.product_picture_url,a.product_type 
		from sys_product a,sys_enterpriseinfo b
		 where a.enterprise_id = b.enterprise_id 
		  and b.enterprise_area_id = #{areaID} 
		  and a.product_name like CONCAT('%',#{keyword},'%')    <!-- 0热销，1不热销 -->
	</select>
	
	<!-- for update 防止并发 -->
	<select id="apiQueryStore" resultType="java.lang.Long">
		select product_num from sys_product where product_id = #{orderProductionsID} and product_num>#{orderProductionsCount} for update
	</select>	
	
	<select id="apiMinusStore" resultType="int">
		update sys_product set product_num =#{remainderStore} where product_id = #{orderProductionsID}
	</select>
	
	<select id="apiShoppingCartList" resultMap="apiShoppingCartMap">
	 	select a.id,a.type,a.image_url,
	 	b.product_id,b.product_name,b.product_retail_price,b.product_picture_url,b.product_video_url,b.product_num,
	 	(select count(*) from sys_collection where user_id=#{userId} and product_id = b.product_id ) as  isCollected,
	 	b.product_detail 
	 	from sys_producttype a,sys_product b where a.id=b.product_type 
	 	and b.enter_person_id = (select belong_to_agency_id from sys_user where user_id=#{userId})
	</select>

</mapper>