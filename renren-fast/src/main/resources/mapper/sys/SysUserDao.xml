<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.sys.dao.SysUserDao">
    
      <resultMap type="io.renren.modules.api.entity.dto.LoginDTO" id="apiLogin">
        <result property="userID" column="user_id"/>
        <result property="userPermission" column="user_permission"/>
        <result property="userArea" column="user_area"/>
        <result property="areaID" column="area_id"/>
        <result property="userIntegral" column="user_integral"/>
    </resultMap>    
    
	<select id="queryObject" resultType="io.renren.modules.sys.entity.SysUserEntity">
		select * from sys_user where user_id = #{value}
	</select>
	
	<select id="queryList" resultType="io.renren.modules.sys.entity.SysUserEntity">
		select * from sys_user 
		<where>
			<if test="createUserId != null">
				and `create_user_id` = #{createUserId} 
			</if>
			<if test="username != null and username.trim() != ''">
				and `username` like concat('%',#{username},'%') 
			</if>
		</where>
		<choose>
			<when test="sidx != null and sidx.trim() != ''">
				order by ${sidx} ${order}
			</when>
			<otherwise>
				order by user_id desc
			</otherwise>
		</choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
	<select id="queryTotal" resultType="int">
		select count(*) from sys_user
		<where>
			<if test="createUserId != null">
				and `create_user_id` = #{createUserId} 
			</if>
			<if test="username != null and username.trim() != ''">
				and `username` like concat('%',#{username},'%') 
			</if>
		</where>
	</select>
	
	<!-- 查询用户的所有权限 -->
	<select id="queryAllPerms" resultType="string">
		select m.perms from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
			LEFT JOIN sys_menu m on rm.menu_id = m.menu_id 
		where ur.user_id = #{userId}
	</select>
	
	<!-- 查询用户的所有菜单ID --> 
	<select id="queryAllMenuId" resultType="long">
		select distinct rm.menu_id from sys_user_role ur 
			LEFT JOIN sys_role_menu rm on ur.role_id = rm.role_id 
		where ur.user_id = #{userId}
	</select>
	
	<select id="queryByUserName" resultType="io.renren.modules.sys.entity.SysUserEntity">
		select * from sys_user where username = #{username}
	</select>
	
	<insert id="save" parameterType="io.renren.modules.sys.entity.SysUserEntity" useGeneratedKeys="true" keyProperty="userId">
		insert into sys_user
		(
			`user_id`, 
			`username`, 
			`password`,
			`salt`,
			`email`, 
			`mobile`, 
			`status`, 
			`create_user_id`,
			`create_time`,
			expiry_date,
			area_id,
			user_area,
			belong_to_agency_id,
			user_permission,
			user_integral,
			belong_to_agency_name
		)
		values
		(
			#{userId}, 
			#{username}, 
			#{password},
			#{salt},
			#{email}, 
			#{mobile}, 
			#{status}, 
			#{createUserId},
			#{createTime},
			#{expiryDate},
			#{areaId},
			#{userArea},
			#{belongToAgencyId},
			#{userPermission},
			#{userIntegral},
			#{belongToAgencyName}
		)
	</insert>
	 
	<update id="update" parameterType="io.renren.modules.sys.entity.SysUserEntity">
		update sys_user 
		<set> 
			<if test="username != null">`username` = #{username}, </if>
			<if test="password != null">`password` = #{password}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="mobile != null">`mobile` = #{mobile}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="expiryDate != null">`expiry_date` = #{expiryDate}, </if>
			<if test="areaId != null">`area_id` = #{areaId}, </if>
			<if test="userArea != null">`user_area` = #{userArea}, </if>
			<if test="belongToAgencyId != null">`belong_to_agency_id` = #{belongToAgencyId}, </if>
			<if test="belongToAgencyName != null">`belong_to_agency_name` = #{belongToAgencyName}, </if>
			<if test="userPermission != null">`user_permission` = #{userPermission}, </if>
			<if test="userIntegral != null">`user_integral` = #{userIntegral}, </if>
			<if test="status != null">`status` = #{status}</if>
		</set>
		where user_id = #{userId} 
		<if test="createUserId != null">
			and `create_user_id` = #{createUserId} 
		</if>
	</update>
	
	<update id="updatePassword" parameterType="map">
		update sys_user set `password` = #{newPassword} 
			where user_id = #{userId} and password = #{password}
	</update>
	
	<delete id="deleteBatch">
		delete from sys_user where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
		;
		delete from sys_user_role where user_id in 
		<foreach item="userId" collection="array" open="(" separator="," close=")">
			#{userId}
		</foreach>
	</delete>
	
	<update id="setPermission">
	    update sys_user set user_permission = #{permissionId} where user_id = #{userId}
	</update>
	
	<update id="setExpiryDate">
	    update sys_user set expiry_date = #{expiryDate} where user_id = #{userId}
	</update>
	
	<update id="setRegion">
	    update sys_user set area_id = #{regionId},user_area = #{regionName} where user_id = #{userId}
	</update>
	
	<update id="updateRegion" parameterType ="io.renren.modules.yh.entity.RegionEntity">
	    update sys_user set user_area = #{name} where area_id = #{id}
	</update>
	
	<select id="isExistByRegion" resultType="int">
	    select count(*) from sys_user where area_id = #{id}
	</select>
	
    <select id="apiGetUserByPhone" >
	    select * from sys_user where mobile = #{phoneNumber}
	</select>
	
	<select id="apiValidateLogin" resultMap="apiLogin">
	    select user_id,user_permission,user_area,area_id,user_integral  from sys_user 
	    where mobile = #{phoneNumber} and password =#{password}
	</select>
	
	
	

</mapper>